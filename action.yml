name: Pros Build
description: Automatically build pros projects

inputs:
  repository:
    description: Target repository
    required: false
    default: ${{ github.repository }}
  library-name:
    required: false
    default: null

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        path: ./pros-project
    - run: cp -r ./pros-project/* ./ # its incredibly silly that I have to do this but otherwise it interferes with other checkouts
      shell: bash

    - name: Check If Template
      id: template
      run: |
        template=$(awk -F'=' '/^IS_LIBRARY:=/{print $2}' Makefile)
        echo $template
        echo "template=$template" >> $GITHUB_OUTPUT
      env:
        TEMPLATE: ${{ steps.template.outputs.template }}
      shell: bash

    - name: Get Project Info
      if: ${{ steps.template.outputs.template == 1 && inputs.library-name != null }}
      id: project-info
      shell: bash
      run: |
        if [ $ACTION = opened ]; then
            # we have to get the head sha directly from the pr api, because github silly ig
            echo "then"
            sha=$(wget -O- --quiet https://api.github.com/repos/"${{inputs.repository}}"/pulls/$PR_NUM | jq -r .head.sha | head -c 6)
        else
            echo "else"
            sha=$(echo "$AFTER" | head -c 6)
        fi

        echo "sha=$sha" >> $GITHUB_OUTPUT
        echo "SHA found: $sha"

        version=$(awk -F'=' '/^VERSION:=/{print $2}' Makefile)
        echo "Version found: $version"
        echo "version=$version" >> "$GITHUB_OUTPUT"

        postfix="$version+$sha"
        echo "postfix=$postfix" >> "$GITHUB_OUTPUT"
        echo "Postfix found: $postfix"

        name="$TEMPLATE_NAME@$postfix"
        echo "name=$name" >> "$GITHUB_OUTPUT"
        echo "Name found: $name"

      env:
        # random info needed in the step
        # TODO: try to figure out if this can be removed
        AFTER: ${{ github.event.after }} # this isn't present for pr opened events
        ACTION: ${{github.event.action}}
        PR_NUM: ${{github.event.number}}
        TEMPLATE_NAME: ${{ github.event.repository.name }}

        # info needed by other steps
        SHA: ${{ steps.project-info.outputs.sha }}
        VER: ${{ steps.project-info.outputs.version }}
        POSTFIX: ${{ steps.project-info.outputs.postfix }}
        NAME: ${{ steps.project-info.outputs.name }}

    - name: Install ARM Toolchain
      uses: fiam/arm-none-eabi-gcc@v1
      with:
        release: "10-2020-q4"

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: PIP Installer
      uses: BSFishy/pip-action@v1
      with:
        packages: pros-cli

    - name: Testing PROS Install
      run: pros --version
      shell: bash

    - name: Build PROS Project
      run: |
        make clean quick -j
      shell: bash

    - name: Prepare Template
      if: ${{ steps.template.outputs.template == 1 && inputs.library-name != null }}
      shell: bash
      run: |
        # Update version in Makefile
        sed -i "s/^VERSION:=.*\$/VERSION:=$POSTFIX/" Makefile

        pros make template

        mkdir -p template/include/lemlib/
        cp {LICENSE,README.md} template/include/"${{inputs.library-name}}"/
        echo "\n## [Github link](${{github.server_url}}/${{github.repository}})" >> template/include/"${{inputs.library-name}}"/README.md
        perl -i -pe 's@(?<=[^/])(docs/assets/.*?)(?=[")])@${{github.server_url}}/${{github.repository}}/blob/master/$1?raw=true@g' template/include/"${{inputs.library-name}}"/README.md
        echo $POSTFIX >> template/include/lemlib/VERSION

    - name: Unzip Template
      if: ${{ steps.template.outputs.template == 1 && inputs.library-name != null }}
      uses: montudor/action-zip@v1.0.0
      with:
        args: unzip "${{steps.project-info.outputs.name}}.zip" -d template

    - name: Upload Artifact
      if: ${{ steps.template.outputs.template == 1 && inputs.library-name != null }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.template-name.outputs.name }}
        path: "template/*"
        retention-days: 89
