name: Build Container Image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
    paths-ignore:
      - "README.md"
  pull_request:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  Build_Container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: buildandpush
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Add Environment Variables
        id: env
        run: |
          echo "GH_PULLREQ_NUM=${{ github.event.number }}" >> $GITHUB_ENV
          echo "GH_EEVENT_NAME=${{ github.event_name }}" >> $GITHUB_ENV
          echo "GH_RREPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
      - name: Create Tar Image For Upload
        id: tar
        run: |
          docker images
          tag=${{ steps.meta.outputs.tags }}
          echo $tag
          docker save -o image.tar $tag
        
      - name: Upload Artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: image.tar
          path: image.tar
    outputs:
      prnum: ${{ github.event.number }}
      url: ${{ steps.upload.outputs.artifact-url }}
      tag:  ${{ env.IMAGE_NAME }}
  
  run-lemlib:
    needs: Build_Container
    uses: ./.github/workflows/test-lemlib.yml
    with:
      GH_PR_NUM: ${{ needs.Build_Container.outputs.prnum }}
      CALLER_TOKEN: ${{ github.token }}
    
  run-lemlib-no-artifact:
    needs: Build_Container
    uses: ./.github/workflows/test-lemlib-no-artifact.yml
    with:
      GH_PR_NUM: ${{ needs.Build_Container.outputs.prnum }}
      CALLER_TOKEN: ${{ github.token }}

  run-lemlib-no-hash:
    needs: Build_Container
    uses: ./.github/workflows/test-lemlib-no-hash.yml
    with:
      GH_PR_NUM: ${{ needs.Build_Container.outputs.prnum }}
      CALLER_TOKEN: ${{ github.token }}
  run-ez-template:
    needs: Build_Container
    uses: ./.github/workflows/test-ez-template.yml
    with:
      GH_PR_NUM: ${{ needs.Build_Container.outputs.prnum }}
      CALLER_TOKEN: ${{ github.token }}
  run-lemlib-copy:
    needs: Build_Container
    uses: ./.github/workflows/test-lemlib-with-copying-info-files.yml
    with:
      GH_PR_NUM: ${{ needs.Build_Container.outputs.prnum }}
      CALLER_TOKEN: ${{ github.token }}
  run-lemlib-errors:
    needs: Build_Container
    uses: ./.github/workflows/test-lemlib-with-errors.yml
    with:
      GH_PR_NUM: ${{ needs.Build_Container.outputs.prnum }}
      CALLER_TOKEN: ${{ github.token }}